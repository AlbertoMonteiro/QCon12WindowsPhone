//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.PalestrasDaTrack
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class PalestrasDaTrack { }
#else

	public class PalestrasDaTrack : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public PalestrasDaTrack()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/QCon12.Mobile;component/SampleData/PalestrasDaTrack/PalestrasDaTrack.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private Palestras _Palestras = new Palestras();

		public Palestras Palestras
		{
			get
			{
				return this._Palestras;
			}
		}

		private Track _Track = new Track();

		public Track Track
		{
			get
			{
				return this._Track;
			}

			set
			{
				if (this._Track != value)
				{
					this._Track = value;
					this.OnPropertyChanged("Track");
				}
			}
		}
	}

	public class Palestras : System.Collections.ObjectModel.ObservableCollection<PalestrasItem>
	{ 
	}

	public class PalestrasItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private Track _Track = new Track();

		public Track Track
		{
			get
			{
				return this._Track;
			}

			set
			{
				if (this._Track != value)
				{
					this._Track = value;
					this.OnPropertyChanged("Track");
				}
			}
		}

		private string _Nome = string.Empty;

		public string Nome
		{
			get
			{
				return this._Nome;
			}

			set
			{
				if (this._Nome != value)
				{
					this._Nome = value;
					this.OnPropertyChanged("Nome");
				}
			}
		}

		private string _Descricao = string.Empty;

		public string Descricao
		{
			get
			{
				return this._Descricao;
			}

			set
			{
				if (this._Descricao != value)
				{
					this._Descricao = value;
					this.OnPropertyChanged("Descricao");
				}
			}
		}

		private string _Horario = string.Empty;

		public string Horario
		{
			get
			{
				return this._Horario;
			}

			set
			{
				if (this._Horario != value)
				{
					this._Horario = value;
					this.OnPropertyChanged("Horario");
				}
			}
		}

		private Palestrante _Palestrante = new Palestrante();

		public Palestrante Palestrante
		{
			get
			{
				return this._Palestrante;
			}

			set
			{
				if (this._Palestrante != value)
				{
					this._Palestrante = value;
					this.OnPropertyChanged("Palestrante");
				}
			}
		}
	}

	public class Track : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Nome = string.Empty;

		public string Nome
		{
			get
			{
				return this._Nome;
			}

			set
			{
				if (this._Nome != value)
				{
					this._Nome = value;
					this.OnPropertyChanged("Nome");
				}
			}
		}

		private System.Windows.Media.ImageSource _Logo = null;

		public System.Windows.Media.ImageSource Logo
		{
			get
			{
				return this._Logo;
			}

			set
			{
				if (this._Logo != value)
				{
					this._Logo = value;
					this.OnPropertyChanged("Logo");
				}
			}
		}

		private string _Bio = string.Empty;

		public string Bio
		{
			get
			{
				return this._Bio;
			}

			set
			{
				if (this._Bio != value)
				{
					this._Bio = value;
					this.OnPropertyChanged("Bio");
				}
			}
		}
	}

	public class Palestrante : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Nome = string.Empty;

		public string Nome
		{
			get
			{
				return this._Nome;
			}

			set
			{
				if (this._Nome != value)
				{
					this._Nome = value;
					this.OnPropertyChanged("Nome");
				}
			}
		}
	}
#endif
}
